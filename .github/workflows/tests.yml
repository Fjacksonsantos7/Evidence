name: Tests

on:
  pull_request_target:

jobs:
  external-pr-action-approval:
    uses: ./.github/workflows/external-pr-action-approval.yml
  Tests-sources:
    runs-on: ${{ matrix.os }}
    needs: external-pr-action-approval
    timeout-minutes: 20

    # Conditional Strategy logic from https://github.com/orgs/community/discussions/26253#discussioncomment-3250989
    strategy:
      fail-fast: false

      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, macOS-latest, windows-latest]

        isMain:
          - ${{ github.base_ref == 'main' }}
        exclude:
          - isMain: false
            node-version: 18
          - isMain: false
            os: macOS-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0  # Fetch all history for checking changes

      - name: Check for docs-only changes
        id: check_changes
        run: |
          # Check if there are any changes outside of sites/docs
          CHANGES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -v "^sites/docs/" || true)
          if [ -z "$CHANGES" ]; then
            echo "has_code_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_code_changes=true" >> $GITHUB_OUTPUT
          fi

      - if: steps.check_changes.outputs.has_code_changes == 'true'
        run: git config --global core.autocrlf false && pip install setuptools

      - if: steps.check_changes.outputs.has_code_changes == 'true'
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 8.6.9

      - if: steps.check_changes.outputs.has_code_changes == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - if: steps.check_changes.outputs.has_code_changes == 'true'
        run: pnpm install --frozen-lockfile

      - name: Run tests
        if: steps.check_changes.outputs.has_code_changes == 'true'
        run: pnpm test
        env:
          SEND_ANONYMOUS_USAGE_STATS: ${{ secrets.SEND_ANONYMOUS_USAGE_STATS }}

          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_SSL: ${{ secrets.POSTGRES_SSL }}

          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}

          BIGQUERY_PROJECT_ID: ${{ secrets.BIGQUERY_PROJECT_ID }}
          BIGQUERY_CLIENT_EMAIL: ${{ secrets.BIGQUERY_CLIENT_EMAIL }}
          BIGQUERY_PRIVATE_KEY: ${{ secrets.BIGQUERY_PRIVATE_KEY }}

          SQLITE_FILENAME: ':memory:'

          DUCKDB_FILENAME: ':memory:'

      - name: Docs-only change - Skip sources tests
        if: steps.check_changes.outputs.has_code_changes != 'true'
        run: |
          echo "This PR only contains documentation changes - skipping sources tests"
          exit 0

      - name: Test the CLI via test-env for merges to main
        if: ${{ github.base_ref == 'main' && steps.check_changes.outputs.has_code_changes == 'true' }}
        run: |
          pnpm run sources:test-env && pnpm run build:test-env
